<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<svg height="885" version="1.2" width="870" xmlns="http://www.w3.org/2000/svg" xmlns:atv="http://webmi.atvise.com/2007/svgext" xmlns:xlink="http://www.w3.org/1999/xlink">
 <defs/>
 <metadata>
  <atv:gridconfig enabled="false" gridstyle="lines" height="20" width="20"/>
  <atv:snapconfig enabled="true" height="1" width="1"/>
 </metadata>
 <g atv:insensitive="true" atv:refpx="0" atv:refpy="0" id="id_11" transform="matrix(0.6796,0,0,1.1525,0,0)">
  <rect atv:refpx="640" atv:refpy="384" fill="#ffffff" height="768.00" id="id_12" width="1280.00" x="0" y="0"/>
 </g>
 <g atv:refpx="689" atv:refpy="760.5" id="id_5" transform="matrix(1,0,0,1,112,-16)">
  <polyline atv:refpx="586.5" atv:refpy="785.5" fill="#000018" fill-opacity="0" id="id_9" points="557,747 557,824 616,824 616,824" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-opacity="0.956863" stroke-width="6"/>
  <polygon atv:refpx="1406" atv:refpy="741.501" fill="#000018" id="id_15" points="538,754 574,754 556,729 556,729" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-opacity="0" stroke-width="2.015"/>
 </g>
 <svg atv:refpx="669.071" atv:refpy="666.008" height="63.11" id="id_1" transform="matrix(1.5038,0,0,1.4578,0,0)" width="133" x="378.385" xlink:href="ObjectTypes.PROJECT.ElementoLinea.Principal" y="425.307">
  <atv:argument name="base" value="AGENT.OBJECTS.SCADA.Solidaridad.Circuitos.Circuito_PA.Carcamo_014"/>
 </svg>
 <svg atv:refpx="671.071" atv:refpy="830.009" height="63.11" id="id_2" transform="matrix(1.5038,0,0,1.4578,0,0)" width="133" x="379.715" xlink:href="ObjectTypes.PROJECT.ElementoLinea.Principal" y="537.807">
  <atv:argument name="base" value="AGENT.OBJECTS.SCADA.Solidaridad.Circuitos.Circuito_PA.Desaladora_Puerto_Maya"/>
 </svg>
 <g atv:refpx="308.5" atv:refpy="636.5" id="id_3" transform="matrix(1,0,0,1,34,-13)">
  <polygon atv:refpx="295" atv:refpy="637.501" fill="#000018" id="id_10" points="313,650 277,650 295,625 295,625" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-opacity="0" stroke-width="2.015"/>
  <polyline atv:refpx="265.5" atv:refpy="652" fill="#000018" fill-opacity="0" id="id_78" points="295,630 295,674 236,674 236,674" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-opacity="0.956863" stroke-width="6"/>
 </g>
 <text atv:refpx="268.974" atv:refpy="73.974" fill="#000018" font-family="Arial" font-size="50" font-weight="bold" id="id_106" transform="matrix(0.612,0,0,0.6329,-0.1187,17.8624)" x="5.194" y="109.658">CIRCUITO DE AGUA POTABLE</text>
 <text atv:refpx="194.31" atv:refpy="135.974" fill="#000018" font-family="Arial" font-size="50" font-weight="bold" id="id_8" transform="matrix(0.612,0,0,0.6329,-0.1187,40.6226)" x="5.194" y="171.658">PUERTO AVENTURAS</text>
 <g atv:refpx="533" atv:refpy="637.5" id="id_4" transform="matrix(1,0,0,1,125,-11)">
  <polygon atv:refpx="1244" atv:refpy="636.501" fill="#000018" id="id_13" points="376,649 412,649 394,624 394,624" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-opacity="0" stroke-width="2.015"/>
  <polyline atv:refpx="1033.712" atv:refpy="651" fill="#000018" fill-opacity="0" id="id_14" points="394,629 394,673 440,673 440,673" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-opacity="0.956863" stroke-width="6"/>
 </g>
 <svg atv:refpx="169.01" atv:refpy="663.008" height="63.11" id="id_0" transform="matrix(1.5038,0,0,1.4578,0,0)" width="133" x="45.885" xlink:href="ObjectTypes.PROJECT.ElementoLinea.Principal" y="423.249">
  <atv:argument name="base" value="AGENT.OBJECTS.SCADA.Solidaridad.Circuitos.Circuito_PA.Carcamo_013"/>
 </svg>
 <foreignObject height="453" id="mapa" width="871" x="-3" y="154">
  <div style="width:100%;height:100%" xmlns="http://www.w3.org/1999/xhtml"/>
 </foreignObject>
 <script atv:desc="" atv:name="" type="text/ecmascript"><![CDATA[//----------------Inicializo variables -------------------//


//Variable interna
var Info_Windowact=false;
var Markeract=false;
var Markeractdc;
var Markers= new Array();
var Rutas= new Array();
var Pos_origen;
var Pos_destination;
var WayPoints = new Array();

var google = webMI.rootWindow.google; //Clase Principal
var map; //Variable donde va a vivir el mapa
var m,n;
var circuito =
	[[20.510511080148984, -87.23237643858741],
	 [20.513718430463125, -87.22912772988185],
	 [20.51365437978025, -87.22885857272563]]

					
var circuito_s =
	[[{lat:20.510511080148984, lng:-87.23237643858741},
	"Cárcamo 13, Agua Potable",
	"AGENT.OBJECTS.SCADA.Solidaridad.Circuitos.Circuito_PA.Carcamo_013",
	1, "startpoint"],
	[{lat:20.513718430463125, lng:-87.22912772988185},
	"Cárcamo 14, Agua Potable",
	"AGENT.OBJECTS.SCADA.Solidaridad.Circuitos.Circuito_PA.Carcamo_014",
	2, "midpoint"],
	[{lat:20.51365437978025, lng:-87.22885857272563},
	"Desaladora Puerto Aventuras, Agua Potable",
	"AGENT.OBJECTS.SCADA.Solidaridad.Circuitos.Circuito_PA.Desaladora_Puerto_Maya",
	3, "endpoint"]];
					
var infowindow;					
var circuito_centro;
const symbolSofrel = "/icons/carcamo_31_40px.png";



//----------------Ejecución -------------------//



//Determinación del dispositivo
var infoCliente;
infoCliente = new webMI.getClientInfo();

//Preprocesamiento de variables

//Calculo del Centro
var suma=[0,0];
for (var i=0; i<circuito.length; i++){
	suma[0]=suma[0]+circuito[i][0]; //Latitud 
	suma[1]=suma[1]+circuito[i][1]; //Longitud
}

circuito_centro=[suma[0]/circuito.length,suma[1]/circuito.length];


webMI.addOnload(function() {
	
	//Posiciones en el mapa
	var position1 = new google.maps.LatLng(circuito_centro[0], circuito_centro[1]);
	
	//Opciones del mapa
	var myOptions = {
		zoom: 16,
		center: position1,
		mapTypeId: google.maps.MapTypeId.roadmap
	};
	

	//Inicializo el mapa
	map = new google.maps.Map(document.getElementById("mapa"), myOptions);
	
	
		
	
		
	// Instantiate an info window to hold step text.
	const stepDisplay = new google.maps.InfoWindow();
	
	
	//-------Inicializo Marcadores
	
	circuito_s.forEach(([position,title,object,order,type],i) =>{
		const marker = new google.maps.Marker({
			position, 
			map,
			icon: symbolSofrel,
			title: ` ${order}`,
			optimized: false,
		});
		
		marker.setMap(map);
		
		//Agrego marcador a lista de marcadores
		Markers.push(marker);
	
		//-------Listener de Marcadores
		
		//DOBLECLICK (Fija Carcamo)
		google.maps.event.addListener(marker,'dblclick',function(event) {
					
			//Condición para abrir los displays dependiendo del tipo
			//######################################################################################
			if (type == 'startpoint'){
			//_______________________________________________________________________________________
			//Abrir display en frame de la izquierda, en la primera posición, relativo a la base		
			webMI.display.openDisplay("SYSTEM.DISPLAYS.Circuito.Eslabon",
			{base:   object}, "circuito_1");

			//Abrir display no relativo al object type en el frame de en medio en la primera posición
			webMI.display.openDisplay( object + ".Control",
			webMI.query, "control_1");
			map.panTo(this.getPosition());
			map.setZoom(14);
			
			
			//Condición para no mostrar un endpoint o startpoint en la segunda fila, por las posiciones que ocupa en el array
			m=1;	
				while((circuito_s[i+m][4] != 'midpoint') && ((i+m) < (circuito_s.leght-1))){
				m++;
				}
			//________________________________________________________________________________________
			//Abrir display en frame de la izquierda, en la segunda posición, relativo a la base	
			webMI.display.openDisplay("SYSTEM.DISPLAYS.Circuito.Eslabon",
			{base:   circuito_s[i+m][2]}, "circuito_2");

			
			//Abrir display no relativo al object type en el frame de en medio en la segunda posición
			webMI.display.openDisplay( circuito_s[i+m][2] + ".Control",
			webMI.query, "control_2");
			
			//Condición para no mostrar un endpoint o startpoint en la tercera fila, por las posiciones que ocupa en el array
			n=2;						
				while((circuito_s[i+n][4] != 'midpoint') || (n == m)){
				n++;
				}
		
			
			//_____________________________________________________________________________________
			//Abrir display en frame de la izquierda, en la tercera posición, relativo a la base		
			webMI.display.openDisplay("SYSTEM.DISPLAYS.Circuito.Eslabon",
			{base:   circuito_s[i+n][2]}, "circuito_3");
		

			
			//Abrir display no relativo al object type en el frame de en medio en la tercera posición
			webMI.display.openDisplay( circuito_s[i+n][2] + ".Control",
			webMI.query, "control_3");
			
			//#######################################################################################
				
			} else if (type == 'midpoint'){
			//_______________________________________________________________________________________
			//Abrir display en frame de la izquierda, en la primera posición, relativo a la base		
			webMI.display.openDisplay("SYSTEM.DISPLAYS.Circuito.Eslabon",
			{base:   object}, "circuito_2");
			
			//Abrir display no relativo al object type en el frame de en medio en la primera posición
			webMI.display.openDisplay( object + ".Control",
			webMI.query, "control_2");
			map.panTo(this.getPosition());
			map.setZoom(14);
			
			
			//Condición para no mostrar un endpoint o startpoint en la primera fila, por las posiciones que ocupa en el array
			 m=1;	
				while((circuito_s[i-m][4] != 'midpoint') && ((i-m) > 0)){
				m++;
				}
				
				
					
			//________________________________________________________________________________________
			//Abrir display en frame de la izquierda, en la segunda posición, relativo a la base		
			webMI.display.openDisplay("SYSTEM.DISPLAYS.Circuito.Eslabon",
			{base:   circuito_s[i-m][2]}, "circuito_1");

			
			//Abrir display no relativo al object type en el frame de en medio en la segunda posición
			webMI.display.openDisplay( circuito_s[i-m][2] + ".Control",
			webMI.query, "control_1");
			
			
			//Condición para no mostrar un endpoint o startpoint en la primera fila, por las posiciones que ocupa en el array
			 n=1;	
			while((circuito_s[i+n][4] != 'midpoint') && ((i+n) < (circuito_s.length-1))){
					n++;
				}
				
			//_____________________________________________________________________________________
			//Abrir display en frame de la izquierda, en la tercera posición, relativo a la base		
			webMI.display.openDisplay("SYSTEM.DISPLAYS.Circuito.Eslabon",
			{base:   circuito_s[i+n][2]}, "circuito_3");
			

			
			//Abrir display no relativo al object type en el frame de en medio en la tercera posición
			webMI.display.openDisplay( circuito_s[i+n][2] + ".Control",
			webMI.query, "control_3");
			
			//##########################################################################################
			
			} else if (type == 'endpoint'){
			//_______________________________________________________________________________________
			//Abrir display en frame de la izquierda, en la tercera posición, relativo a la base		
			webMI.display.openDisplay("SYSTEM.DISPLAYS.Circuito.Eslabon",
			{base:   object}, "circuito_3");
			
			//Abrir display no relativo al object type en el frame de en medio en la tercera posición
			webMI.display.openDisplay( object + ".Control",
			webMI.query, "control_3");
			map.panTo(this.getPosition());
			map.setZoom(14);
			
			
			//Condición para no mostrar un endpoint o startpoint en la segunda fila, por las posiciones que ocupa en el array
			 m=1;	
				while((circuito_s[i-m][4] != 'midpoint') && ((i-m) > 0)){
				m++;
				}
			
			//________________________________________________________________________________________
			//Abrir display en frame de la izquierda, en la segunda posición, relativo a la base		
			webMI.display.openDisplay("SYSTEM.DISPLAYS.Circuito.Eslabon",
			{base:   circuito_s[i-m][2]}, "circuito_2");

			
			//Abrir display no relativo al object type en el frame de en medio en la segunda posición
			webMI.display.openDisplay( circuito_s[i-m][2] + ".Control",
			webMI.query, "control_2");
			
			
			
			//Condición para no mostrar un endpoint o startpoint en la tercera fila, y no repetir midpoint
			n=2;			
				while( (n == m)  || ((circuito_s[i-n][4] != 'midpoint') &&  ((i-n) > 0)) ){
				n++;
				}
			
			//_____________________________________________________________________________________
			//Abrir display en frame de la izquierda, en la primera posición, relativo a la base		
			webMI.display.openDisplay("SYSTEM.DISPLAYS.Circuito.Eslabon",
			{base:   circuito_s[i-n][2]}, "circuito_1");
			
			//Abrir display no relativo al object type en el frame de en medio en la primera posición
			webMI.display.openDisplay( circuito_s[i-n][2] + ".Control",
			webMI.query, "control_1");
			}
			
			
			/*
			//Abrir display en frame de la izquierda, en la primera posición, relativo a la base		
			webMI.display.openDisplay("SYSTEM.DISPLAYS.Circuito.Eslabon",
			{base:   object}, "circuito_1");
			
			//Abrir display no relativo al object type en el frame de en medio
			webMI.display.openDisplay( object + ".Control",
			webMI.query, "control_1");
			map.panTo(this.getPosition());
			map.setZoom(14);*/

			Markeract=true;
			Markeractdc=marker;
			Pos_origen=position;
		
			
			//Limpio
			Elimina_Ruta(Rutas);
				
		});
	/*	map.addListener("zoom_changed", () => {
    infowindow.setContent("Zoom: " + map.getZoom());
  });*/
		
		
		//CLICK (Abre Infowindow)
		/*google.maps.event.addListener(marker,'click',function(event) {	
			
			//Abro en temporal
			if (marker!=Markeractdc && Markeract==true ){		
				webMI.display.openDisplay("ObjectTypes.PROJECT.DataLogger"+ type +".Grafico_SectorizacionB", {base:  "AGENT.OBJECTS.Sofrel." + object}, "SectorizacionB");
				Pos_destination=position;	
				
				//Limpio
				Elimina_Ruta(Rutas);
				
				//Dibujo
				//Dibuja_Ruta(Pos_origen,Pos_destination);
			}
			
			//webMI.display.openDisplay("SYSTEM.LIBRARY.PROJECT.OBJECTDISPLAYS.LAYOUTS.Blanc_Layout",{}, "detallesCarcamoNext");
			
		});	*/
			
		
		//MOUSEOVER
		google.maps.event.addListener(marker, "mouseover", function(event){
			infowindow = new google.maps.InfoWindow();
			//Abro marcador
			infowindow.open(marker.getMap,marker);
			Info_Windowact=true;
			//Defino que objeto va a ser el seleccionado para mostrar su información
			webMI.data.subscribe( object +".pressure",
			function(e){
				infowindow.setContent(title+" - Presión: " +
				e.value.toFixed(2) + "kg/cm2");
				}
			);
			
				//infowindow.setContent(title);
		
		});	
		
		//MOUSEOUT
		google.maps.event.addListener(marker, "mouseout", function(event){
			
			
			if (Info_Windowact){
				infowindow.close();
				Info_Windowact=false;
			}			
		});
		
		
		
	});	
			
});



function Dibuja_Ruta(Origen,Destination){
	
	if(Markeract && (Origen!=Destination)){
			
		//////////// Servicios Rutas en el mapa
		var directionsService = new google.maps.DirectionsService();
		var directionsRenderer = new google.maps.DirectionsRenderer({ map: map });		
		
		//Crea el request
		var request = {
			origin: Origen,
			destination:Destination,
			travelMode: google.maps.TravelMode.DRIVING // Puedes ajustar el modo de transporte según tus necesidades
		  };    
		
		
		directionsService.route(request, function(response, status) {
			if (status == google.maps.DirectionsStatus.OK) {
			  directionsRenderer.setDirections(response);
			  Rutas.push(directionsRenderer);
			}
		  });
	 }
    
 }


function Elimina_Ruta(Rutas){
	
	Rutas.forEach(function(ruta) {
		ruta.setMap(null);
	});
	
	Rutas=new Array();
    
 }]]></script>
</svg>
