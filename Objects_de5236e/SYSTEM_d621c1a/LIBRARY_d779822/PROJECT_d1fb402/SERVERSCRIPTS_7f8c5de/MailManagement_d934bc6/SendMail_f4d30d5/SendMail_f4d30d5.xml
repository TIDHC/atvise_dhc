<?xml version="1.0" encoding="UTF-8"?>
<script>
  <metadata>
    <priority>0</priority>
    <owner>root</owner>
    <runcontext>caller</runcontext>
  </metadata>
  <parameter name="alarm" type="alarm" trigger="true" relative="false" value=""/>
  <parameter name="smtpserver" type="string" trigger="false" relative="false" value="MailAlarm"/>
  <parameter name="from" type="string" trigger="false" relative="false" value="atvise@gmx.at"/>
  <parameter name="subject" type="string" trigger="false" relative="false" value="atvise alarm"/>
  <code><![CDATA[// Send E-Mail depending on scheduler

var nodeId = "AGENT.SMTPSERVERS." + smtpserver;
var smtpServer = Ua.findNode(nodeId);
if (Ua.Status(smtpServer) != Ua.Status.BADNODEIDUNKNOWN) {
	if(alarm.state != 3 || (alarm.state == 3 && alarm.retain == true)){
		var activeUsers = call("AGENT.OBJECTS.ATVISE.Mail.sendMail", {alarmState: alarm.state});
		if(activeUsers.error){
			console.log(activeUsers.error);		
		}
		else{
			var sendcount = 0;
			activeUsers.forEach(function(user) {
				var prio = user.prioOperator && user.prioValue ? ((eval("alarm.priority " + user.prioOperator + " user.prioValue") || user.prioValue == "") ? true : false) : true;
				var addr = (alarm.InputNode.indexOf(user.nodeAddress) !== -1 || user.nodeAddress == "") ? true : false;
				var group = (alarm.Groups.includes(user.groupAddress) || user.groupAddress == "")?true:false;
				if(prio == true && addr == true && group == true){
					sendMail(user.mail);
					sendcount++;
				}
			});
			(sendcount == 0)?console.log("Alarm MailManagement: No user is responsible for this node, priority and group"):"";
		}
	}
} 
else console.error("Alarm MailManagement: SMTP server '"+smtpserver+"' doesn't exist");

function sendMail(Mails){
	Mails.forEach(function(userMail) {
		var MailAddr = userMail.trim();
		var mailText = alarm.address.replace("AGENT.OBJECTS.","") + " " + alarm.eventtext.en + "\nvalue: " + alarm.value + "\nID: " + alarm.AlarmId;
		var parameters = {
			"smtpserver": smtpserver,
			"content_type": 'text/plain; charset="utf-8"',
			"from": from, 
			"to": MailAddr,
			"subject": subject, 
			"body": mailText
		};
		call("Mail.SendMail",parameters);
		console.log("Alarm MailManagement: Alarm notification has been sent to "+MailAddr);
	});
}]]></code>
</script>
