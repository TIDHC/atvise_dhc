<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<svg height="890" version="1.2" width="1675" xmlns="http://www.w3.org/2000/svg" xmlns:atv="http://webmi.atvise.com/2007/svgext" xmlns:xlink="http://www.w3.org/1999/xlink">
 <defs/>
 <metadata>
  <atv:parameter behavior="optional" defaultvalue="" name="mapPath" valuetype="string"/>
  <atv:gridconfig enabled="false" gridstyle="lines" height="20" width="20"/>
  <atv:snapconfig enabled="false" height="10" width="10"/>
 </metadata>
 <g atv:insensitive="true" atv:refpx="0" atv:refpy="0" id="id_1">
  <rect atv:refpx="837.5" atv:refpy="445" fill="#ffffff" height="890.00" id="id_2" width="1675.00" x="0" y="0"/>
 </g>
 <foreignObject height="890" id="id_0" width="1675" x="0" y="0">
  <div id="container" style="width:100%;height:100%" xmlns="http://www.w3.org/1999/xhtml"/>
 </foreignObject>
 <script atv:desc="" atv:name="highmaps" type="text/ecmascript" xlink:href="/highcharts/highmaps.js"/>
 <script atv:desc="" atv:name="optimizations" type="text/ecmascript" xlink:href="/highcharts/atviseModules/atviseoptimizationsForMaps.js"/>
 <script atv:desc="" atv:name="" type="text/ecmascript"><![CDATA[/*
*	@param {string} mapPath: path to the map which should be displayed, if no path entered the standard austria map will be used
*/

const mapPath = webMI.query["mapPath"] != "" ? webMI.query["mapPath"] : '/highcharts/maps/at-all.topo.json';
var topology;	
var map;

/*
*	load json map
*/
function getmap(){
	fetch(mapPath)
	.then(function(response){
		return response.json()
	})
	.then(function(json){
		topology = json
		initChart() 
	})
}

/*
*	initialize mapChart
*/ 
function initChart(){
	var mapDiv = document.getElementById('container')
	map = window.Highcharts.mapChart(mapDiv, {
        chart: {
            map: topology
        },

        title: {
            text: 'Population of capital cities in Austria',
        },

        legend: {
            enabled: false
        },

        
        plotOptions: {
            map:{
				dataLabels: {
					enabled: true,
					format: '<span style="font-size:20px">{point.properties.postal-code}</span>'
				},
            }
        },
       
        series: [{
			mapData: topology,
			name: "Austria"
        },
        {
            name: 'Population',
            borderColor: '#ff7045',
            mapData: topology,
            type: "mappoint",
            joinBy: ['hc-a2', 'code'],
            data: [{	id: "Bregenz",
						lat: 47.503040,
						lon: 9.747070,
						value: 29306,
						code: "VO"
					},
					{	id: "Innsbruck",
						lat: 47.262691,
						lon: 11.394700,
						value: 130596,
						code: "TR"
					},
					{	id: "Salzburg",
						lat: 47.809490,
						lon: 13.055010,
						value: 155348,
						code: "SZ"
					},
					{	id: "St.PÃ¶lten",
						lat: 48.203529,
						lon: 15.638170,
						value: 56360,
						code: "NO"
					},
					{	id: "Linz",
						lat: 48.3059078,
						lon: 14.286198,
						value: 207254,
						code: "OO"
					},
					{	id: "Wien",
						lat: 48.2083537,
						lon: 16.3725042,
						value: 1931830,
						code: "WI"
					},
					{	id: "Eisenstadt",
						lat: 47.8387577,
						lon: 16.5362159,
						value: 15240,
						code: "BU"
					},
					{	id: "Graz",
						lat: 47.0708678,
						lon: 15.4382786,
						value: 292533,
						code: "ST"
					},
					{	id: "Klagenfurt",
						lat: 46.6228162,
						lon: 14.3079604,
						value: 102610,
						code: "KA"
					}]
						
        }],
        tooltip:{
			formatter: function(){
				return '<span style="font-size:15px">' + this.point.options.id + '</span><br>' + this.series.name + ': ' + window.Highcharts.numberFormat(this.point.value, 0, ',', '.')
			}
		},
     });	
}

// workflow
webMI.addOnload(function(){
	getmap();
});]]></script>
</svg>
