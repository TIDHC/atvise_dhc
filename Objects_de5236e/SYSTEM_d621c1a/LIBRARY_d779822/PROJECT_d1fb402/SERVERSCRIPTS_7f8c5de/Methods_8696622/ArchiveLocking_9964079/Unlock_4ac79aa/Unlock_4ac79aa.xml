<?xml version="1.0" encoding="UTF-8"?>
<script>
  <parameter name="archivename" type="string" trigger="false" relative="false" value=""/>
  <code><![CDATA[/** atvise server wrapper for UA method "AGENT.HISTORY.METHODS.unlock"
This script is a standard atvise resource and must not be modified.

Example

var result = call("Methods.ArchiveLocking.Unlock", {
	archivename: "C:/Program Files/atvise/database/datavalues_raw.db"
});

if (result.error)
	console.log(result.errorstring);
else
	console.log(result.result);

Input:
param archivename {string}, The archive file/path to unlock.

Output:
return {Object} A result object is returned with the following properties:
- Object.error {number},{optional} Returns the error code in case of an error. If no error occurred, it is undefined.
- Object.errorstring {string},{optional} Returns the error string in case of an error. If no error occurred, it is undefined.
- Object.result {object},{optional} Returns the result (empty) if no error occurred.
*/

var historyCall = Ua.findNode("AGENT.HISTORY.METHODS.unlock").result;
var response = historyCall.call({
	object: "AGENT.HISTORY.METHODS",
	input: [{ type: Ua.DataType.STRING, value: archivename }]
});

var result = {};

if (response.error) {
	result.error = response.error;
	result.errorstring = Ua.Status(result.error).toString();

	if (response.argumentError) {
		var parameterNames = [server.script.origin.split(".").slice(-3, -2)[0], "ns=1;s=AGENT.HISTORY.METHODS.unlock"];

		for (var i = 0; i < response.argumentError.length; ++i)
			if (response.argumentError[i])
				result.errorstring += ", " + parameterNames[i] + ":" + Ua.Status(response.argumentError[i]).toString();
	}
} else {
	result.result = {};
}

return result;
]]></code>
</script>
