<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<svg height="306.5" version="1.2" width="500" xmlns="http://www.w3.org/2000/svg" xmlns:atv="http://webmi.atvise.com/2007/svgext" xmlns:xlink="http://www.w3.org/1999/xlink">
 <defs/>
 <desc>The Input for a "Picker Date Time"</desc>
 <title>Date Time Input</title>
 <metadata>
  <atv:gridconfig enabled="false" gridstyle="lines" height="20" width="20"/>
  <atv:snapconfig enabled="false" height="10" width="10"/>
 </metadata>
 <svg atv:refpx="250" atv:refpy="153.25" height="306.5" id="_datepicker" width="500" x="0" xlink:href="SYSTEM.LIBRARY.PROJECT.OBJECTDISPLAYS.FlatComponents.Datepicker" y="0">
  <atv:argument name="base" prefix="base"/>
  <atv:argument name="popupId" value="_datepicker"/>
 </svg>
 <text atv:refpx="382.756" atv:refpy="92" fill="#ffffff" font-family="Open Sans" font-size="16" id="timeLabel" text-anchor="start" x="364.5" y="98">Time</text>
 <svg atv:refpx="425" atv:refpy="175.5" height="31" id="timeInput" transform="matrix(1.625,0,0,1,0,0)" width="80" x="221.538" xlink:href="SYSTEM.LIBRARY.PROJECT.OBJECTDISPLAYS.FlatComponents.EditableLabel" y="160">
  <atv:argument name="base" prefix=""/>
  <atv:argument name="validation" value="Time"/>
  <atv:overwrite id="input_label" transform="matrix(0.6154,0,0,1,0,0)" x="65"/>
  <atv:overwrite id="input_bg" transform="matrix(0.6154,0,0,1,0,0)" width="129"/>
  <atv:overwrite id="blinking_frame" transform="matrix(0.6154,0,0,1,0,0)" width="202.326"/>
 </svg>
 <script atv:desc="" atv:name="" type="text/ecmascript"><![CDATA[var popupId = webMI.query.popupId;

function updateLabels() {
	webMI.gfx.setText('timeLabel', new Date(_value.raw).toLocaleTimeString());
	webMI.trigger.fire('setValue', webMI.sprintf("%02d:%02d:%02d.%03d", _value.hours, _value.minutes, _value.seconds, _value.millis), 'timeInput');
}

_value = {};

function setValue(timestamp) {
	var millis = 0;
	
	if (timestamp) {
		millis = timestamp;
		if (typeof millis != "number") {
			millis = parseInt(timestamp, 10);
			if (isNaN(millis)) {
				millis = 0;
			}
		}
	}

	var newDate = new Date(millis);
	_value.raw = millis;
	_value.day = newDate.getDate();
	_value.dayOfTheWeek = newDate.getDay();
	_value.month = newDate.getMonth();
	_value.year = newDate.getFullYear();
	_value.hours = newDate.getHours();
	_value.minutes = newDate.getMinutes();
	_value.seconds = newDate.getSeconds();
	_value.millis = newDate.getMilliseconds();

	updateLabels();
}

webMI.addOnload(function() {
	webMI.trigger.fire('setValue', webMI.query.value, '_datepicker');
	setValue(webMI.query.value);
});

webMI.trigger.connect('com.atvise.datepicker__datepicker', function(e) {
	var outDate = new Date(e.value);
	outDate.setHours(_value.hours);
	outDate.setMinutes(_value.minutes);
	outDate.setSeconds(_value.seconds);
	outDate.setMilliseconds(_value.millis);
	webMI.trigger.fire("com.atvise.datetimepicker_" + popupId, outDate.valueOf());
});

webMI.trigger.connect('valuechanged', function(e) {
	if (!_value.raw && _value.raw !== 0) return;
	
	var newDate = new Date(_value.raw),
		time = new Date(e.value);

	if (_value.hours == time.getHours() && _value.minutes == time.getMinutes() && _value.seconds == time.getSeconds() && _value.millis == time.getMilliseconds()) return;
	
	newDate.setHours(time.getHours());
	newDate.setMinutes(time.getMinutes());
	newDate.setSeconds(time.getSeconds());
	newDate.setMilliseconds(time.getMilliseconds());	

	setValue(newDate.valueOf());
}, 'timeInput');]]></script>
</svg>
