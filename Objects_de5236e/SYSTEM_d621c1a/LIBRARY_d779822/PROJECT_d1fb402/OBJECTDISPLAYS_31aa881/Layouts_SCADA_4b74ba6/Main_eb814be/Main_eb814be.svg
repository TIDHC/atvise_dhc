<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<svg height="890" version="1.2" width="1920" xmlns="http://www.w3.org/2000/svg" xmlns:atv="http://webmi.atvise.com/2007/svgext" xmlns:xlink="http://www.w3.org/1999/xlink">
 <defs/>
 <metadata>
  <atv:gridconfig enabled="false" gridstyle="lines" height="20" width="20"/>
  <atv:snapconfig enabled="true" height="5" width="5"/>
 </metadata>
 <foreignObject height="890" id="mapa" width="1915" x="5" y="0">
  <div style="width:100%;height:100%" xmlns="http://www.w3.org/1999/xhtml"/>
 </foreignObject>
 <script atv:desc="" atv:href="SYSTEM.LIBRARY.PROJECT.DISPLAYSCRIPTS.script_circuitos.circuitArray" atv:name="circuitArray" atv:type="text/ecmascript"/>
 <script atv:desc="" atv:name="" type="text/ecmascript"><![CDATA[//----------------Inicializo variables -------------------//


//Variable interna
var Info_Windowact=false;
var Markeract=false;
var Markeractdc;
var Markers= new Array();
var Rutas= new Array();
var Pos_origen;
var Pos_destination;
var WayPoints = new Array();

var google = webMI.rootWindow.google; //Clase Principal
var map; //Variable donde va a vivir el mapa
var m,n;


					

var circuito_s = [];

//Obtener el nombre en formato string del objeto base, haciendo una query al webMI 
	var name = webMI.query.base;
	//Parte de la función addOnload
	var id = "";
	var value = true;
	circuito.forEach(([position,title,object,order,type],i) =>{
		circuito_s.push(circuito[i]);
	});	
	
	circuito_1A.forEach(([position,title,object,order,type],i) =>{
		circuito_s.push(circuito_1A[i]);
	});
	
	circuito_4.forEach(([position,title,object,order,type],i) =>{
		circuito_s.push(circuito_4[i]);
	});
	
	circuito_6A.forEach(([position,title,object,order,type],i) =>{
		circuito_s.push(circuito_6A[i]);
	});
	
	circuito_8.forEach(([position,title,object,order,type],i) =>{
		circuito_s.push(circuito_8[i]);
	});
	
	circuito_11.forEach(([position,title,object,order,type],i) =>{
		circuito_s.push(circuito_11[i]);
	});
					
var infowindow;					
var circuito_centro;
const symbolSofrel = "/tanque_agua.png";



//----------------Ejecución -------------------//



//Determinación del dispositivo
var infoCliente;
infoCliente = new webMI.getClientInfo();

//Preprocesamiento de variables

//Calculo del Centro
var suma=[0,0];
for (var i=0; i<circuito_calculo.length; i++){
	suma[0]=suma[0]+circuito_calculo[i][0]; //Latitud 
	suma[1]=suma[1]+circuito_calculo[i][1]; //Longitud
}

circuito_centro=[suma[0]/circuito_calculo.length,suma[1]/circuito_calculo.length];


webMI.addOnload(function() {
	
	//Posiciones en el mapa
	var position1 = new google.maps.LatLng(circuito_centro[0], circuito_centro[1]);
	
	//Opciones del mapa
	var myOptions = {
		zoom: 11.5,
		center: position1,
		mapTypeId: google.maps.MapTypeId.roadmap
	};
	

	//Inicializo el mapa
	map = new google.maps.Map(document.getElementById("mapa"), myOptions);
	
	
		
	
		
	// Instantiate an info window to hold step text.
	const stepDisplay = new google.maps.InfoWindow();
	
	
	//-------Inicializo Marcadores
	
	circuito_s.forEach(([position,title,object,order,type],i) =>{
		const marker = new google.maps.Marker({
			position, 
			map,
			icon: symbolSofrel,
			title: ` ${order}`,
			optimized: false,
		});
		
		marker.setMap(map);
		
		//Agrego marcador a lista de marcadores
		Markers.push(marker);
	
		//-------Listener de Marcadores
		
		//DOBLECLICK (Fija Carcamo)
		google.maps.event.addListener(marker,'dblclick',function(event) {
					
		

			webMI.display.openWindow({display:"SYSTEM.DISPLAYS.Circuito.Eslabon",
			extern:false,height:300,menubar:false,modal:false,movable:true,
			resizable:true,scrollbars:false,status:false,title:title,
			toolbar:false,width:600,x:0,y:300,query:{base:   object}});

			map.panTo(this.getPosition());
			map.setZoom(15);

			Markeract=true;
			Markeractdc=marker;
			Pos_origen=position;
		
			
			//Limpio
			Elimina_Ruta(Rutas);
				
		});
	/*	map.addListener("zoom_changed", () => {
    infowindow.setContent("Zoom: " + map.getZoom());
  });*/
		
		
		//CLICK (Abre Infowindow)
		google.maps.event.addListener(marker,'click',function(event) {	
			
			//Abro en temporal
			if (marker!=Markeractdc && Markeract==true ){		
				Pos_destination=position;	
				
				//Limpio
				Elimina_Ruta(Rutas);
				
				//Dibujo
				Dibuja_Ruta(Pos_origen,Pos_destination);
				
				webMI.display.openWindow({display:"SYSTEM.DISPLAYS.Circuito.Eslabon",
				extern:false,height:300,menubar:false,modal:false,movable:true,
				resizable:true,scrollbars:true,status:false,title:title,
				toolbar:false,width:600,x:1320,y:300,query:{base:   object}});
			}
			
			
		});	
			
		
		//MOUSEOVER
		google.maps.event.addListener(marker, "mouseover", function(event){
			infowindow = new google.maps.InfoWindow();
			//Abro marcador
			infowindow.open(marker.getMap,marker);
			Info_Windowact=true;
			//Defino que objeto va a ser el seleccionado para mostrar su información
			webMI.data.subscribe( object +".pressure",
			function(e){
				infowindow.setContent(title+" - Presión: " +
				e.value.toFixed(2) + "kg/cm2");
				}
			);
			
				//infowindow.setContent(title);
		
		});	
		
		//MOUSEOUT
		google.maps.event.addListener(marker, "mouseout", function(event){
			

			
			if (Info_Windowact){
				infowindow.close();
				Info_Windowact=false;
			}			
		});
		
		
		
	});	
			
});



function Dibuja_Ruta(Origen,Destination){
	
	if(Markeract && (Origen!=Destination)){
			
		//////////// Servicios Rutas en el mapa
		var directionsService = new google.maps.DirectionsService();
		var directionsRenderer = new google.maps.DirectionsRenderer({ map: map });		
		
		//Crea el request
		var request = {
			origin: Origen,
			destination:Destination,
			travelMode: google.maps.TravelMode.WALKING // Puedes ajustar el modo de transporte según tus necesidades
		  };    
		
		
		directionsService.route(request, function(response, status) {
			if (status == google.maps.DirectionsStatus.OK) {
			  directionsRenderer.setDirections(response);
			  Rutas.push(directionsRenderer);
			}
		  });
	 }
    
 }


function Elimina_Ruta(Rutas){
	
	Rutas.forEach(function(ruta) {
		ruta.setMap(null);
	});
	
	Rutas=new Array();
    
 }
]]></script>
</svg>
