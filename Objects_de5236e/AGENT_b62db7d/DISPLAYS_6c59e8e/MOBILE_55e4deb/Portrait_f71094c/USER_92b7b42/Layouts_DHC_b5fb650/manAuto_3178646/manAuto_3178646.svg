<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<svg height="846" version="1.2" width="644" xmlns="http://www.w3.org/2000/svg" xmlns:atv="http://webmi.atvise.com/2007/svgext" xmlns:xlink="http://www.w3.org/1999/xlink">
 <defs/>
 <metadata>
  <atv:parameter behavior="optional" desc="rotation (bool)" name="rotation" valuetype="address"/>
  <atv:parameter behavior="optional" defaultvalue="15" desc="angle per step" name="angle" valuetype="number"/>
  <atv:parameter behavior="optional" defaultvalue="1000" desc="milliseconds between steps" name="speed" valuetype="number"/>
  <atv:gridconfig enabled="false" gridstyle="lines" height="20" width="20"/>
  <atv:snapconfig enabled="false" height="10" width="10"/>
 </metadata>
 <svg atv:refpx="163.5" atv:refpy="157.5" height="23.7" id="id_0" transform="matrix(13.78,0,0,13.2911,0,0)" width="23.73" x="0" xlink:href="SYSTEM.LIBRARY.PROJECT.RESOURCES%2FSVG%2Finkscape%2Fcog-svgrepo-com.svg" y="0"/>
 <script atv:desc="" atv:name="" type="text/ecmascript"><![CDATA[
// rotation must be a boolean (true->start, false->stop)
//  The rotating Object (oder Objectgroup) must be named "rotor"
//  Rotation-Speed and Angle per step get defined by the parameters
//  "speed" in milliseconds und "angle" in degreees.
var currentRotation = 0;
var currentRotationSpeed  = Number(webMI.query["speed"]);
var currentRotationAngle = Number(webMI.query["angle"]);
var rotateFunction;

webMI.data.subscribe(webMI.query["rotation"] + "", function(e) {	
	var value = e.value;
	if (value){
		rotateFunction = setInterval(function() {
			currentRotation -= currentRotationAngle;
			if (currentRotation >= 0) currentRotation = 360;
			webMI.gfx.setRotation("id_0", webMI.translate(currentRotation, 360, 0, 360, 0));
		}, currentRotationSpeed);
	} else {
		clearInterval(rotateFunction);
	}
});]]></script>
</svg>
