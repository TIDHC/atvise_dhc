<?xml version="1.0" encoding="UTF-8"?>
<script>
  <metadata>
    <priority>0</priority>
  </metadata>
  <parameter name="ua" type="uainput" trigger="false" relative="false" value=""/>
  <code><![CDATA[/* 
Parse all displays of a server and collect referenced variables. Returns the unused ones.
Input (members of ua):
	-node:uanodeid{mandatory} Specifies the nodeid of the server to search.
Output (return value)	:
	tablecolumnheaders:[string] Array of column titles
	tablecolumntypes:[uanodeid] Array of typedefinitions of column types
	tabledata:[[string]] Array of string array that represents the rows of the result
If no unused variables found empty arrays are returned.
*/
function toNodes2(result, x) {
	for (var i = 0; i < result.length; ++i) x.push(result[i].node);
}

var server = Ua.findNode(ua.node);
var serverExist = Ua.Status(server) != Ua.Status.BADNODEIDUNKNOWN;

if (!serverExist) throw new Error("Server:" + ua.node + " does not exist.");

var displays = [];

toNodes2(
	Ua.findNode(server.result.nodeId.address + ".DISPLAYS").result.browse({
		typeDefinition: "VariableTypes.ATVISE.Display",
		recursive: true
	}).result,
	displays
);

toNodes2(
	Ua.findNode("SYSTEM.DISPLAYS").result.browse({
		typeDefinition: "VariableTypes.ATVISE.Display",
		recursive: true
	}).result,
	displays
);

var strings = [];
var result = call("SYSTEM.LIBRARY.ATVISE.SERVERSCRIPTS.CrossRef.Lib.DisplayVariables", {
	ua: {
		node: displays,
		server: server,
		recursive: true
	}
});

if (result && result.unused) for (var i = 0; i < result.unused.length; ++i) strings.push(result.unused[i].nodeId.address);

return {
	tablecolumnheaders: ["Unused nodes"],
	tablecolumntypes: [Ua.findNode(Ua.VariableType.BASEVARIABLETYPE).result],
	tabledata: [strings]
};
]]></code>
</script>
